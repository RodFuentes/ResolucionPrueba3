create procedure listarArticulos()
Select a.codigoArticulo, a.nombre, a.precio, a.imagen
from articulo a order by a.nombre;

create procedure sp_ArticuloCod(cod int)
select a.codigoArticulo, a.nombre, a.precio, a.imagen
from articulo a where a.codigoArticulo = cod order by a.nombre;

CREATE  PROCEDURE sp_Articulo(
   _codigoArticulo  int ,
   _nombre  varchar(100) ,
   _precio  int
)
UPDATE articulo
SET 
   nombre = _nombre,
   precio = _precio
WHERE
    codigoArticulo = _codigoArticulo
;
create procedure sp_venta_All ()
SELECT
    v.codigoVenta AS CodigoVenta,
    v.cliente AS Cliente, 
    v.fecha AS Fecha,
    d.codigoArticulo AS CodigoArticulo, 
    a.nombre AS Nombre,
    a.precio AS Precio, 
    d.cantidad AS Cantidad,
    d.descuento AS Descuento,
    a.precio*cantidad AS Parcial,
    ((a.precio*cantidad)-d.descuento) AS SubTotal,
    (
    SELECT
        SUM((dT.cantidad * aaT.precio)-dT.descuento) AS TotalPagar
    FROM
        DetalleVenta AS dT INNER JOIN
        Articulo AS aaT ON dT.codigoArticulo = aaT.codigoArticulo
    WHERE
        dT.codigoVenta=v.codigoVenta
    ) AS TotalPagar
FROM 
    Venta AS v INNER JOIN
    DetalleVenta AS d ON v.codigoVenta = d.codigoVenta INNER JOIN
    Articulo AS a ON d.codigoArticulo = a.codigoArticulo
ORDER BY
    CodigoVenta, Nombre;
CREATE  PROCEDURE sp_Articulo_all(
)
SELECT
    a.codigoAritulo,
    a.nombre,
    a.precio
FROM
    articulo a
ORDER BY
    a.nombre
;
DELIMITER $$
CREATE  PROCEDURE sp_InresarVenta(
   INOUT _codigoVenta  int ,
   _cliente  varchar(100) 
)
BEGIN
-- Codigo autogenerado
SELECT IFNULL(MAX(codigoVenta),0)+1 into _codigoVenta FROM `venta`;
INSERT INTO `venta`(
   `codigoVenta`,
   `cliente`,
   `fecha`
)
VALUES (
   _codigoVenta,
   _cliente,
   CURDATE()
);
END $$
DELIMITER;

CREATE PROCEDURE sp_detalleventa(
   _codigoVenta  int ,
   _codigoArticulo  int ,
   _cantidad int ,
   _descuento  int
)
INSERT INTO detalleventa(
   codigoVenta,
   codigoArticulo,
   cantidad,
   descuento
)
VALUES (
   _codigoVenta,
   _codigoArticulo,
   _cantidad,
   _descuento
);